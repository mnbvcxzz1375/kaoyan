#include<iostream>
#include<cstdlib>
using namespace std;


void insert_sort(int* arr, int n) {
	for (int i = 1; i < n; i++) {  //第一个不用比较,即arr[0]
		if (arr[i] < arr[i - 1]) {  //如果比较的数比前一个数要小才要排序
			int temp = arr[i];
			int j;
			for ( j = i - 1; j >= 0; j--) {  //与前面i-1个数逐个对比，如果小于arr[j],将这一位往后移动一位
				if (temp < arr[j]) {
					arr[j + 1] = arr[j];   //错误在与当交换了第一个较小的数后是不会停止的，而是继续把其他更小的数覆盖掉!!!!!!!
				}
				//一定要写跳出不然会出现下面出现的错误。
				else break;
			}
			arr[j+1] = temp;
		}
	}

	for (int i = 0; i < n; i++) {
		cout << arr[i] << " ";
	}
}



////correct
//void insert_sort(int* arr, int n) {
//	for (int i = 1; i < n; i++) {  // 第一个不用比较, 即arr[0]
//		if (arr[i] < arr[i - 1]) {  // 如果比较的数比前一个数要小才要排序
//			int temp = arr[i];
//			int j;
//			for (j = i - 1; j >= 0 && temp < arr[j]; j--) {  // 与前面i-1个数逐个对比
//				arr[j + 1] = arr[j];  // 将这一位往后移动一位
//			}
//			arr[j + 1] = temp;  // 插入temp到正确的位置
//		}
//	}
//
//	for (int i = 0; i < n; i++) {
//		cout << arr[i] << " ";
//	}
//	cout << endl;
//}

//int main() {
//	int n;
//	cin >> n;
//	int* arr = (int*)malloc(sizeof(int) * (n + 1));
//	for (int i = 0; i < n; i++) {
//		arr[i] = rand() % 100;
//		cout << arr[i] << " ";
//	}
//	cout << endl;
//	insert_sort(arr, n);
//}


//10
//41 67 34 0 69 24 78 58 62 64
//
//41 67 67 0 69 24 78 58 62 64
//41 41 67 0 69 24 78 58 62 64
//
//34 41 67 67 69 24 78 58 62 64
//34 41 41 67 69 24 78 58 62 64
//34 34 41 67 69 24 78 58 62 64
//
//
//0 34 41 67 69 69 78 58 62 64
//0 34 41 67 67 69 78 58 62 64
//0 34 41 41 67 69 78 58 62 64
//0 34 34 41 67 69 78 58 62 64
//0 34 34 41 67 69 78 58 62 64
//
//
//24 34 34 41 67 69 78 78 62 64
//24 34 34 41 67 69 69 78 62 64
//24 34 34 41 67 67 69 78 62 64
//24 34 34 41 67 67 69 78 62 64
//24 34 34 41 67 67 69 78 62 64
//24 34 34 41 67 67 69 78 62 64
//24 34 34 41 67 67 69 78 62 64
//
//58 34 34 41 67 67 69 78 78 64
//58 34 34 41 67 67 69 69 78 64
//58 34 34 41 67 67 67 69 78 64
//58 34 34 41 67 67 67 69 78 64
//58 34 34 41 67 67 67 69 78 64
//58 34 34 41 67 67 67 69 78 64
//58 34 34 41 67 67 67 69 78 64
//58 34 34 41 67 67 67 69 78 64
//
//62 34 34 41 67 67 67 69 78 78
//62 34 34 41 67 67 67 69 69 78
//62 34 34 41 67 67 67 67 69 78
//62 34 34 41 67 67 67 67 69 78
//62 34 34 41 67 67 67 67 69 78
//62 34 34 41 67 67 67 67 69 78
//62 34 34 41 67 67 67 67 69 78
//62 34 34 41 67 67 67 67 69 78
//62 34 34 41 67 67 67 67 69 78
//
//64 34 34 41 67 67 67 67 69 78